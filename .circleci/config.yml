version: 2.1

orbs:
  docker: circleci/docker@1.0.1
  kubernetes: circleci/kubernetes@0.11.0

commands:
  with_gradle_cache:
    description: |
      Run a set of steps with gradle dependencies cached.
      This command will first restore a cache of gradle dependencies, if one was
      saved by a previous build. The provided `steps` will then be executed, and
      if successful, then a fresh cache will be saved, if required.
      The contents of the `~/.gradle` directory is cached, which will substantially
      improve build times for projects with many dependencies.
      The cache-key is generated from any files named `build.gradle` (can be overriden by `build_file` parameter)
      that are present in the `working_directory`.
    parameters:
      steps:
        type: steps
      cache_key:
        description: Add a custom suffix to your cache key in the event you need to work with multiple gradle caches.
        type: string
        default: 'v1'
      build_file:
        description: Override gradle build file name (for example with `build.gradle.kts`)
        type: string
        default: 'build.gradle'
    steps:
      - run:
          name: Generate Cache Checksum
          command: find . -name '<< parameters.build_file >>' | sort | xargs cat | shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-<< parameters.cache_key>>-{{ checksum "/tmp/gradle_cache_seed" }}-{{ checksum ".circleci/config.yml" }}
      - steps: << parameters.steps >>
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: gradle-<< parameters.cache_key>>-{{ checksum "/tmp/gradle_cache_seed" }}-{{ checksum ".circleci/config.yml" }}

jobs:
  assemble-warehouse-executable-jar:
    docker:
      - image: 'cimg/openjdk:14.0'
    steps:
      - checkout
      - with_gradle_cache:
          build_file: 'build.gradle.kts'
          steps:
            - run:
                command: ./gradlew assemble
                working_directory: warehouse
      - persist_to_workspace:
          root: warehouse
          paths:
            - build/libs/warehouse-*.jar

  build-and-publish-docker-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - attach_workspace:
          at: warehouse
      - docker/build:
          path: warehouse
          image: sevteen/lobiani-warehouse
      - docker/push:
          digest-path: /tmp/digest.txt
          image: sevteen/lobiani-warehouse
          tag: '$CIRCLE_SHA1,latest'
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

  deploy-to-k8s:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - kubernetes/install-kubectl
      - kubernetes/install-kubeconfig:
          kubeconfig: KUBECONFIG_DATA
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: warehouse/kube-resources.yaml
          resource-name: deployment/lobiani-warehouse
          show-kubectl-command: true
          namespace: sevteen

workflows:
  deploy:
    jobs:
      - assemble-warehouse-executable-jar
      - build-and-publish-docker-image:
          requires:
            - assemble-warehouse-executable-jar
      - deploy-to-k8s:
          requires:
            - build-and-publish-docker-image
